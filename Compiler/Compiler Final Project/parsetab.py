
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL_VAL DEFINE DIVIDE EQUAL FALSE FUN GREATER ID IF ILLEGAL LPAREN MINUS MOD MULTIPLY NOT NUMBER OR PLUS PRINT_BOOL PRINT_NUM RPAREN SMALLER TRUEprogram : stmt_liststmt_list : stmt\n                 | stmt_list stmtstmt : exp\n            | def_stmt\n            | print_stmtprint_stmt : LPAREN PRINT_NUM exp RPAREN\n                  | LPAREN PRINT_BOOL exp RPARENexp : BOOL_VAL\n           | number\n           | variable\n           | num_op\n           | logical_op\n           | fun_exp\n           | fun_call\n           | if_expnumber : NUMBERnum_op : LPAREN PLUS exp_list RPAREN\n              | LPAREN MINUS exp exp RPAREN\n              | LPAREN MULTIPLY exp_list RPAREN\n              | LPAREN DIVIDE exp exp RPAREN\n              | LPAREN MOD exp exp RPAREN\n              | LPAREN GREATER exp exp RPAREN\n              | LPAREN SMALLER exp exp RPAREN\n              | LPAREN EQUAL exp_list RPARENlogical_op : LPAREN AND exp_list RPAREN\n                  | LPAREN OR exp_list RPAREN\n                  | LPAREN NOT exp RPARENexp_list : exp\n                | exp_list expdef_stmt : LPAREN DEFINE ID exp RPARENvariable : IDfun_call : LPAREN fun_exp param_list RPAREN\n                | LPAREN ID param_list RPARENfun_exp : LPAREN FUN LPAREN fun_ids RPAREN fun_body RPARENfun_ids : ID\n               | fun_ids ID\n               | emptyfun_body : expparam_list : exp\n                  | param_list exp\n                  | emptyif_exp : LPAREN IF test_exp then_exp else_exp RPARENtest_exp : expthen_exp : expelse_exp : expempty :'
    
_lr_action_items = {'BOOL_VAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,60,62,63,64,65,66,67,69,74,75,76,77,81,82,83,84,85,86,87,88,89,90,96,97,],[7,7,-2,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,-32,-17,-3,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-40,-42,7,-29,7,7,7,7,7,7,7,7,7,7,7,-44,-34,-41,-7,-8,-18,-30,-20,-25,-26,-27,-28,-33,7,-45,-31,-19,-21,-22,-23,-24,7,-43,-35,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,60,62,63,64,65,66,67,69,74,75,76,77,81,82,83,84,85,86,87,88,89,90,96,97,],[15,15,-2,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,19,-32,-17,-3,39,39,39,39,39,39,39,39,39,39,39,39,39,39,57,39,39,39,19,39,-40,-42,39,-29,39,39,39,39,39,39,39,39,39,39,39,-44,-34,-41,-7,-8,-18,-30,-20,-25,-26,-27,-28,-33,39,-45,-31,-19,-21,-22,-23,-24,39,-43,-35,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,60,62,63,64,65,66,67,69,74,75,76,77,81,82,83,84,85,86,87,88,89,90,96,97,],[17,17,-2,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,-32,-17,-3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-40,-42,17,-29,17,17,17,17,17,17,17,17,17,17,17,-44,-34,-41,-7,-8,-18,-30,-20,-25,-26,-27,-28,-33,17,-45,-31,-19,-21,-22,-23,-24,17,-43,-35,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,62,63,64,65,66,67,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,97,],[16,16,-2,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,21,-32,-17,-3,38,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,21,16,-40,-42,16,-29,16,16,16,16,16,16,16,16,16,79,16,16,-44,-34,-41,-7,-8,-18,-30,-20,-25,-26,-27,-28,91,-36,-38,-33,16,-45,-31,-19,-21,-22,-23,-24,16,-37,-43,-35,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,62,64,65,66,69,74,75,76,77,81,84,85,86,87,88,89,96,97,],[0,-1,-2,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,-32,-17,-3,-34,-7,-8,-18,-20,-25,-26,-27,-28,-33,-31,-19,-21,-22,-23,-24,-43,-35,]),'RPAREN':([7,8,9,10,11,12,13,14,16,17,21,36,40,41,42,43,44,45,46,48,53,54,55,56,57,58,61,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,86,87,88,89,91,92,93,94,95,96,97,],[-9,-10,-11,-12,-13,-14,-15,-16,-32,-17,-47,-47,62,-40,-42,64,65,66,-29,69,74,75,76,77,-47,81,84,-34,-41,-18,-30,85,-20,86,87,88,89,-25,-26,-27,-28,90,-36,-38,-33,-19,-21,-22,-23,-24,-37,96,-46,97,-39,-43,-35,]),'DEFINE':([15,],[20,]),'PRINT_NUM':([15,],[22,]),'PRINT_BOOL':([15,],[23,]),'PLUS':([15,39,],[24,24,]),'MINUS':([15,39,],[25,25,]),'MULTIPLY':([15,39,],[26,26,]),'DIVIDE':([15,39,],[27,27,]),'MOD':([15,39,],[28,28,]),'GREATER':([15,39,],[29,29,]),'SMALLER':([15,39,],[30,30,]),'EQUAL':([15,39,],[31,31,]),'AND':([15,39,],[32,32,]),'OR':([15,39,],[33,33,]),'NOT':([15,39,],[34,34,]),'FUN':([15,19,39,],[35,35,35,]),'IF':([15,39,],[37,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt_list':([0,],[2,]),'stmt':([0,2,],[3,18,]),'exp':([0,2,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,45,47,48,49,50,51,52,53,54,55,58,59,82,90,],[4,4,41,43,44,46,47,46,49,50,51,52,46,46,46,56,41,60,61,63,67,68,67,70,71,72,73,67,67,67,63,83,93,95,]),'def_stmt':([0,2,],[5,5,]),'print_stmt':([0,2,],[6,6,]),'number':([0,2,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,45,47,48,49,50,51,52,53,54,55,58,59,82,90,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'variable':([0,2,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,45,47,48,49,50,51,52,53,54,55,58,59,82,90,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'num_op':([0,2,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,45,47,48,49,50,51,52,53,54,55,58,59,82,90,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'logical_op':([0,2,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,45,47,48,49,50,51,52,53,54,55,58,59,82,90,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'fun_exp':([0,2,15,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,45,47,48,49,50,51,52,53,54,55,58,59,82,90,],[12,12,36,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,36,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'fun_call':([0,2,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,45,47,48,49,50,51,52,53,54,55,58,59,82,90,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'if_exp':([0,2,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,40,45,47,48,49,50,51,52,53,54,55,58,59,82,90,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'param_list':([21,36,],[40,58,]),'empty':([21,36,57,],[42,42,80,]),'exp_list':([24,26,31,32,33,],[45,48,53,54,55,]),'test_exp':([37,],[59,]),'fun_ids':([57,],[78,]),'then_exp':([59,],[82,]),'else_exp':([82,],[92,]),'fun_body':([90,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','parser.py',9),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','parser.py',13),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','parser.py',14),
  ('stmt -> exp','stmt',1,'p_stmt','parser.py',18),
  ('stmt -> def_stmt','stmt',1,'p_stmt','parser.py',19),
  ('stmt -> print_stmt','stmt',1,'p_stmt','parser.py',20),
  ('print_stmt -> LPAREN PRINT_NUM exp RPAREN','print_stmt',4,'p_print_stmt','parser.py',24),
  ('print_stmt -> LPAREN PRINT_BOOL exp RPAREN','print_stmt',4,'p_print_stmt','parser.py',25),
  ('exp -> BOOL_VAL','exp',1,'p_exp','parser.py',32),
  ('exp -> number','exp',1,'p_exp','parser.py',33),
  ('exp -> variable','exp',1,'p_exp','parser.py',34),
  ('exp -> num_op','exp',1,'p_exp','parser.py',35),
  ('exp -> logical_op','exp',1,'p_exp','parser.py',36),
  ('exp -> fun_exp','exp',1,'p_exp','parser.py',37),
  ('exp -> fun_call','exp',1,'p_exp','parser.py',38),
  ('exp -> if_exp','exp',1,'p_exp','parser.py',39),
  ('number -> NUMBER','number',1,'p_number','parser.py',43),
  ('num_op -> LPAREN PLUS exp_list RPAREN','num_op',4,'p_num_op','parser.py',47),
  ('num_op -> LPAREN MINUS exp exp RPAREN','num_op',5,'p_num_op','parser.py',48),
  ('num_op -> LPAREN MULTIPLY exp_list RPAREN','num_op',4,'p_num_op','parser.py',49),
  ('num_op -> LPAREN DIVIDE exp exp RPAREN','num_op',5,'p_num_op','parser.py',50),
  ('num_op -> LPAREN MOD exp exp RPAREN','num_op',5,'p_num_op','parser.py',51),
  ('num_op -> LPAREN GREATER exp exp RPAREN','num_op',5,'p_num_op','parser.py',52),
  ('num_op -> LPAREN SMALLER exp exp RPAREN','num_op',5,'p_num_op','parser.py',53),
  ('num_op -> LPAREN EQUAL exp_list RPAREN','num_op',4,'p_num_op','parser.py',54),
  ('logical_op -> LPAREN AND exp_list RPAREN','logical_op',4,'p_logical_op','parser.py',75),
  ('logical_op -> LPAREN OR exp_list RPAREN','logical_op',4,'p_logical_op','parser.py',76),
  ('logical_op -> LPAREN NOT exp RPAREN','logical_op',4,'p_logical_op','parser.py',77),
  ('exp_list -> exp','exp_list',1,'p_exp_list','parser.py',87),
  ('exp_list -> exp_list exp','exp_list',2,'p_exp_list','parser.py',88),
  ('def_stmt -> LPAREN DEFINE ID exp RPAREN','def_stmt',5,'p_def_stmt','parser.py',92),
  ('variable -> ID','variable',1,'p_variable','parser.py',97),
  ('fun_call -> LPAREN fun_exp param_list RPAREN','fun_call',4,'p_fun_call','parser.py',104),
  ('fun_call -> LPAREN ID param_list RPAREN','fun_call',4,'p_fun_call','parser.py',105),
  ('fun_exp -> LPAREN FUN LPAREN fun_ids RPAREN fun_body RPAREN','fun_exp',7,'p_fun_exp','parser.py',126),
  ('fun_ids -> ID','fun_ids',1,'p_fun_ids','parser.py',130),
  ('fun_ids -> fun_ids ID','fun_ids',2,'p_fun_ids','parser.py',131),
  ('fun_ids -> empty','fun_ids',1,'p_fun_ids','parser.py',132),
  ('fun_body -> exp','fun_body',1,'p_fun_body','parser.py',139),
  ('param_list -> exp','param_list',1,'p_param_list','parser.py',144),
  ('param_list -> param_list exp','param_list',2,'p_param_list','parser.py',145),
  ('param_list -> empty','param_list',1,'p_param_list','parser.py',146),
  ('if_exp -> LPAREN IF test_exp then_exp else_exp RPAREN','if_exp',6,'p_if_exp','parser.py',153),
  ('test_exp -> exp','test_exp',1,'p_test_exp','parser.py',157),
  ('then_exp -> exp','then_exp',1,'p_then_exp','parser.py',161),
  ('else_exp -> exp','else_exp',1,'p_else_exp','parser.py',165),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',169),
]
